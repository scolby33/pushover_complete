# Tox (https://tox.wiki) is a tool for running tests and linters
# in multiple virtualenvs. This configuration file will run the
# test suite.
# To use it, `pip install tox` and then run `tox" from this directory.

[tox]
envlist =
    # make sure we start with a clean slate for coverage measurements
    coverage-clean

    # packaging
    manifest
    pyroma

    # code
    ruff
    mypy
    pydoclint
    docstr-coverage

    # documentation
    doc8
    docs

    # tests
    py
    coverage-report

[testenv:coverage-clean]
deps =
    coverage
skip_install = true
description = Remove any existing coverage files.
commands = coverage erase

[testenv:manifest]
deps =
    check-manifest
skip_install = true
description = Check that the MANIFEST.in definition matches the files in VCS.
commands = check-manifest

[testenv:pyroma]
deps =
    pygments
    pyroma
skip_install = true
description = Check that the package complies with best practices.
commands = pyroma --min=10 .

[testenv:ruff]
deps =
    ruff
skip_install = true
description = Check that code formatting style is correct and that there are no linting errors.
commands =
    ruff format --check
    ruff check

[testenv:mypy]
deps =
    mypy
skip_install = true
description = Perform static type checking on the code.
commands = mypy --install-types --non-interactive --ignore-missing-imports src/

[testenv:pydoclint]
deps =
    pydoclint
skip_install = true
description = Check that docstrings match the function's signature.
commands = pydoclint src/ tests/

[testenv:docstr-coverage]
deps =
    docstr-coverage
skip_install = true
description = Measure coverage of docstrings in the package.
commands = docstr-coverage --skip-init src/ tests/

[testenv:doc8]
deps =
    doc8
skip_install = true
description = Check style of RST files.
commands = doc8 ./AUTHORS.rst ./CONTRIBUTING.rst ./LICENSE.rst ./README.rst docs/source/

[testenv:docs]
allowlist_externals =
    cat
    cp
    mkdir
changedir = docs
extras = docs
description = Build the documentation.
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:py]
deps =
    coverage
    pytest
    responses
    requests-toolbelt
description = Run pytest tests with coverage.
commands = coverage run --parallel --module pytest --durations=20 tests {posargs}
depends =
    coverage-clean

[testenv:coverage-report]
deps = coverage
skip_install = true
description = Report test coverage.
commands =
    coverage combine
    coverage report
depends = py
